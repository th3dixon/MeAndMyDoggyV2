namespace MeAndMyDog.API.Models.Entities;

/// <summary>
/// Represents an invoice generated by a service provider for their services
/// </summary>
public class Invoice
{
    /// <summary>
    /// Unique identifier for the invoice
    /// </summary>
    public string Id { get; set; } = Guid.NewGuid().ToString();
    
    /// <summary>
    /// Foreign key to the service provider
    /// </summary>
    public string ServiceProviderId { get; set; } = string.Empty;
    
    /// <summary>
    /// Foreign key to the client (pet owner)
    /// </summary>
    public string ClientId { get; set; } = string.Empty;
    
    /// <summary>
    /// Related appointment ID (optional)
    /// </summary>
    public string? AppointmentId { get; set; }
    
    /// <summary>
    /// Human-readable invoice number (e.g., INV-2024-001)
    /// </summary>
    public string InvoiceNumber { get; set; } = string.Empty;
    
    /// <summary>
    /// Service description for the invoice
    /// </summary>
    public string Description { get; set; } = string.Empty;
    
    /// <summary>
    /// Base amount before VAT
    /// </summary>
    public decimal Amount { get; set; }
    
    /// <summary>
    /// VAT rate percentage (e.g., 20 for 20%)
    /// </summary>
    public decimal VatRate { get; set; } = 20m;
    
    /// <summary>
    /// Calculated VAT amount
    /// </summary>
    public decimal VatAmount { get; set; }
    
    /// <summary>
    /// Total amount including VAT
    /// </summary>
    public decimal TotalAmount { get; set; }
    
    /// <summary>
    /// Currency code (default GBP)
    /// </summary>
    public string Currency { get; set; } = "GBP";
    
    /// <summary>
    /// Invoice status (Pending, Paid, Overdue, Cancelled)
    /// </summary>
    public string Status { get; set; } = "Pending";
    
    /// <summary>
    /// Date the invoice was issued
    /// </summary>
    public DateTimeOffset IssueDate { get; set; }
    
    /// <summary>
    /// Date the invoice payment is due
    /// </summary>
    public DateTimeOffset DueDate { get; set; }
    
    /// <summary>
    /// Date the invoice was paid (if applicable)
    /// </summary>
    public DateTimeOffset? PaidDate { get; set; }
    
    /// <summary>
    /// Payment method used (if paid)
    /// </summary>
    public string? PaymentMethod { get; set; }
    
    /// <summary>
    /// Payment reference/transaction ID
    /// </summary>
    public string? PaymentReference { get; set; }
    
    /// <summary>
    /// Additional notes for the invoice
    /// </summary>
    public string? Notes { get; set; }
    
    /// <summary>
    /// Invoice terms and conditions
    /// </summary>
    public string? Terms { get; set; }
    
    /// <summary>
    /// Whether this invoice has been sent to the client
    /// </summary>
    public bool IsSent { get; set; } = false;
    
    /// <summary>
    /// Date the invoice was sent to the client
    /// </summary>
    public DateTimeOffset? SentDate { get; set; }
    
    /// <summary>
    /// When the invoice was created
    /// </summary>
    public DateTimeOffset CreatedAt { get; set; }
    
    /// <summary>
    /// When the invoice was last updated
    /// </summary>
    public DateTimeOffset UpdatedAt { get; set; }
    
    /// <summary>
    /// Navigation property to the service provider
    /// </summary>
    public virtual ServiceProvider ServiceProvider { get; set; } = null!;
    
    /// <summary>
    /// Navigation property to the client
    /// </summary>
    public virtual ApplicationUser Client { get; set; } = null!;
    
    /// <summary>
    /// Navigation property to the related appointment (optional)
    /// </summary>
    public virtual Appointment? Appointment { get; set; }
}