@{
    ViewData["Title"] = "Find Pet Services";
    Layout = "_Layout";
}

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet">
    <style>
        .pet-orange { color: #FF8C42; }
        .bg-pet-orange { background-color: #FF8C42; }
        .text-pet-orange { color: #FF8C42; }
        .border-pet-orange { border-color: #FF8C42; }
        
        .service-card {
            transition: all 0.3s ease;
            cursor: pointer;
        }
        
        .service-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        }
        
        .service-card.selected {
            border-color: #FF8C42;
            background-color: #FFF7ED;
        }
        
        .provider-card {
            transition: all 0.3s ease;
        }
        
        .provider-card:hover {
            box-shadow: 0 8px 16px rgba(0,0,0,0.1);
        }
        
        .time-slot {
            border: 2px solid #E5E7EB;
            transition: all 0.2s ease;
        }
        
        .time-slot:hover:not(:disabled) {
            border-color: #FF8C42;
            background-color: #FFF7ED;
        }
        
        .time-slot.selected {
            border-color: #FF8C42;
            background-color: #FF8C42;
            color: white;
        }
        
        .time-slot:disabled {
            background-color: #F3F4F6;
            color: #9CA3AF;
            cursor: not-allowed;
        }
        
        .modal-backdrop {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 40;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }
        
        .modal-backdrop.show {
            opacity: 1;
            visibility: visible;
        }
        
        .modal-content {
            position: fixed;
            bottom: -100%;
            left: 0;
            right: 0;
            background-color: white;
            border-radius: 20px 20px 0 0;
            z-index: 50;
            transition: all 0.3s ease;
            max-height: 90vh;
            overflow-y: auto;
        }
        
        .modal-content.show {
            bottom: 0;
        }
        
        .filter-drawer {
            position: fixed;
            top: 0;
            right: -100%;
            width: 350px;
            height: 100vh;
            background-color: white;
            z-index: 50;
            transition: all 0.3s ease;
            box-shadow: -4px 0 8px rgba(0,0,0,0.1);
        }
        
        .filter-drawer.open {
            right: 0;
        }
        
        .mobile-filter-toggle {
            position: fixed;
            top: 120px;
            right: 16px;
            z-index: 30;
            width: 56px;
            height: 56px;
            background-color: #FF8C42;
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
        
        #map, #mobile-map {
            height: 500px;
            width: 100%;
            border-radius: 12px;
        }
        
        @@media (max-width: 1024px) {
            .filter-drawer {
                width: 100%;
                right: -100%;
            }
        }
        
        .loading-spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #FF8C42;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        
        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
}

<body class="bg-gray-50 font-sans overflow-x-hidden" x-data="serviceDiscovery">
    <!-- Mobile Filter Button -->
    <button @@click="showMobileFilters = true" class="mobile-filter-toggle lg:hidden">
        <i class="fas fa-filter"></i>
    </button>

    <!-- Mobile Bottom Navigation -->
    <div class="lg:hidden fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 z-40">
        <div class="flex">
            <button @@click="mobileView = 'map'" 
                    :class="mobileView === 'map' ? 'text-pet-orange' : 'text-gray-600'" 
                    class="flex-1 py-3 flex flex-col items-center gap-1">
                <i class="fas fa-map text-xl"></i>
                <span class="text-xs">Map</span>
            </button>
            <button @@click="mobileView = 'results'" 
                    :class="mobileView === 'results' ? 'text-pet-orange' : 'text-gray-600'" 
                    class="flex-1 py-3 flex flex-col items-center gap-1">
                <i class="fas fa-list text-xl"></i>
                <span class="text-xs">Results</span>
            </button>
            <button @@click="showMobileFilters = true" 
                    class="flex-1 py-3 flex flex-col items-center gap-1 text-gray-600">
                <i class="fas fa-filter text-xl"></i>
                <span class="text-xs">Filters</span>
            </button>
        </div>
    </div>

    <!-- Main Content Container -->
    <div class="min-h-screen bg-gray-50 lg:flex">
        <!-- Left Sidebar - Filters (Desktop) -->
        <div class="hidden lg:block lg:w-80 bg-white shadow-lg">
            <div class="p-6 border-b border-gray-200">
                <h2 class="text-xl font-semibold text-gray-800">Find Pet Services</h2>
                <p class="text-sm text-gray-600 mt-1">Search for trusted pet care providers near you</p>
            </div>
            
            <div class="p-6 space-y-6 overflow-y-auto" style="max-height: calc(100vh - 180px);">
                <!-- Location Search -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Location</label>
                    <div class="relative">
                        <input type="text" 
                               x-model="filters.location"
                               @@input="searchLocation"
                               placeholder="Enter postcode or city"
                               class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pet-orange focus:border-transparent">
                        <i class="fas fa-map-marker-alt absolute left-3 top-3 text-gray-400"></i>
                    </div>
                    <div x-show="locationSuggestions.length > 0" class="mt-2 bg-white border border-gray-200 rounded-lg shadow-lg">
                        <template x-for="suggestion in locationSuggestions" :key="suggestion.id">
                            <div @@click="selectLocation(suggestion)" 
                                 class="px-4 py-2 hover:bg-gray-50 cursor-pointer border-b border-gray-100 last:border-b-0">
                                <span x-text="suggestion.displayName"></span>
                            </div>
                        </template>
                    </div>
                </div>

                <!-- Radius -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Search Radius</label>
                    <select x-model="filters.radiusMiles" 
                            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pet-orange focus:border-transparent">
                        <option value="5">5 miles</option>
                        <option value="10">10 miles</option>
                        <option value="15">15 miles</option>
                        <option value="25">25 miles</option>
                        <option value="50">50 miles</option>
                    </select>
                </div>

                <!-- Service Type -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-3">Service Type</label>
                    <div class="grid grid-cols-2 gap-3">
                        <template x-for="service in serviceTypes" :key="service.id">
                            <div @@click="toggleService(service.id)" 
                                 :class="filters.serviceCategories.includes(service.id) ? 'border-pet-orange bg-orange-50' : 'border-gray-200'"
                                 class="service-card p-3 border-2 rounded-lg text-center">
                                <i :class="service.icon" class="text-2xl mb-2 text-pet-orange"></i>
                                <div class="text-sm font-medium" x-text="service.name"></div>
                            </div>
                        </template>
                    </div>
                </div>

                <!-- Date Range -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Date Range</label>
                    <div class="space-y-2">
                        <input type="text" 
                               x-model="filters.startDate"
                               id="start-date"
                               placeholder="Start date"
                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pet-orange focus:border-transparent">
                        <input type="text" 
                               x-model="filters.endDate"
                               id="end-date"
                               placeholder="End date"
                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pet-orange focus:border-transparent">
                    </div>
                </div>

                <!-- Price Range -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Price Range</label>
                    <div class="flex space-x-2">
                        <input type="number" 
                               x-model="filters.minPrice"
                               placeholder="Min £"
                               class="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pet-orange focus:border-transparent">
                        <input type="number" 
                               x-model="filters.maxPrice"
                               placeholder="Max £"
                               class="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pet-orange focus:border-transparent">
                    </div>
                </div>

                <!-- Rating Filter -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Minimum Rating</label>
                    <div class="flex space-x-2">
                        <template x-for="rating in [3, 4, 5]" :key="rating">
                            <button @@click="filters.minRating = rating" 
                                    :class="filters.minRating === rating ? 'bg-pet-orange text-white' : 'bg-gray-100 text-gray-700'"
                                    class="flex-1 py-2 rounded-lg font-medium">
                                <span x-text="rating"></span>+ ⭐
                            </button>
                        </template>
                    </div>
                </div>

                <!-- Additional Filters -->
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-3">Additional Filters</label>
                    <div class="space-y-2">
                        <label class="flex items-center">
                            <input type="checkbox" x-model="filters.verifiedOnly" class="rounded border-gray-300 text-pet-orange focus:ring-pet-orange">
                            <span class="ml-2 text-sm">Verified providers only</span>
                        </label>
                        <label class="flex items-center">
                            <input type="checkbox" x-model="filters.emergencyService" class="rounded border-gray-300 text-pet-orange focus:ring-pet-orange">
                            <span class="ml-2 text-sm">Emergency services available</span>
                        </label>
                        <label class="flex items-center">
                            <input type="checkbox" x-model="filters.weekendAvailable" class="rounded border-gray-300 text-pet-orange focus:ring-pet-orange">
                            <span class="ml-2 text-sm">Weekend availability</span>
                        </label>
                        <label class="flex items-center">
                            <input type="checkbox" x-model="filters.eveningAvailable" class="rounded border-gray-300 text-pet-orange focus:ring-pet-orange">
                            <span class="ml-2 text-sm">Evening availability</span>
                        </label>
                    </div>
                </div>

                <!-- Search Button -->
                <button @@click="searchProviders" 
                        :disabled="loading"
                        class="w-full bg-pet-orange text-white py-3 rounded-lg font-medium hover:bg-orange-600 transition-colors disabled:opacity-50">
                    <span x-show="!loading">Search Providers</span>
                    <span x-show="loading" class="flex items-center justify-center">
                        <div class="loading-spinner mr-2"></div>
                        Searching...
                    </span>
                </button>
            </div>
        </div>

        <!-- Main Content Area -->
        <div class="flex-1 lg:flex">
            <!-- Results List -->
            <div class="lg:w-1/2 bg-white" 
                 :class="mobileView === 'results' ? 'block' : 'hidden lg:block'">
                
                <!-- Search Results Header -->
                <div class="p-4 border-b border-gray-200 bg-white sticky top-0 z-10">
                    <div class="flex justify-between items-center">
                        <div>
                            <h3 class="text-lg font-semibold text-gray-800">Search Results</h3>
                            <p x-show="searchResults.totalCount > 0" class="text-sm text-gray-600">
                                Found <span x-text="searchResults.totalCount"></span> providers
                            </p>
                        </div>
                        <div class="flex items-center space-x-2">
                            <label class="text-sm text-gray-600">Sort by:</label>
                            <select x-model="filters.sortBy" 
                                    @@change="searchProviders"
                                    class="px-3 py-1 border border-gray-300 rounded text-sm">
                                <option value="distance">Distance</option>
                                <option value="rating">Rating</option>
                                <option value="price">Price</option>
                                <option value="availability">Availability</option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Loading State -->
                <div x-show="loading" class="p-8 text-center">
                    <div class="loading-spinner mx-auto mb-4"></div>
                    <p class="text-gray-600">Searching for providers...</p>
                </div>

                <!-- No Results -->
                <div x-show="!loading && searchResults.results && searchResults.results.length === 0" 
                     class="p-8 text-center">
                    <i class="fas fa-search text-4xl text-gray-400 mb-4"></i>
                    <h3 class="text-lg font-medium text-gray-800 mb-2">No providers found</h3>
                    <p class="text-gray-600">Try adjusting your search criteria or expanding your search radius.</p>
                </div>

                <!-- Results List -->
                <div class="overflow-y-auto pb-20 lg:pb-4" style="max-height: calc(100vh - 120px);">
                    <template x-for="provider in searchResults.results" :key="provider.id">
                        <div class="provider-card p-4 border-b border-gray-100 hover:bg-gray-50 cursor-pointer"
                             @@click="selectProvider(provider)">
                            <div class="flex space-x-4">
                                <img :src="provider.profileImageUrl || 'https://via.placeholder.com/80'" 
                                     :alt="provider.businessName"
                                     class="w-20 h-20 object-cover rounded-lg">
                                
                                <div class="flex-1">
                                    <div class="flex justify-between items-start mb-1">
                                        <h4 class="font-semibold text-gray-800" x-text="provider.businessName"></h4>
                                        <div class="flex items-center space-x-1">
                                            <span x-show="provider.isVerified" class="text-green-600">
                                                <i class="fas fa-check-circle"></i>
                                            </span>
                                            <span x-show="provider.isPremium" class="text-yellow-600">
                                                <i class="fas fa-crown"></i>
                                            </span>
                                        </div>
                                    </div>
                                    
                                    <div class="flex items-center mb-2">
                                        <div class="flex items-center">
                                            <span class="text-yellow-500">★</span>
                                            <span x-text="provider.rating" class="ml-1 text-sm font-medium"></span>
                                            <span x-text="'(' + provider.reviewCount + ')'" class="ml-1 text-sm text-gray-500"></span>
                                        </div>
                                        <span class="mx-2 text-gray-300">•</span>
                                        <span x-text="provider.distanceMiles + ' miles'" class="text-sm text-gray-600"></span>
                                    </div>
                                    
                                    <p x-text="provider.description" class="text-sm text-gray-600 mb-2 line-clamp-2"></p>
                                    
                                    <div class="flex justify-between items-center">
                                        <div class="text-sm">
                                            <span class="font-medium text-pet-orange">£<span x-text="provider.priceRange?.minPrice"></span>-<span x-text="provider.priceRange?.maxPrice"></span></span>
                                            <span class="text-gray-500">per service</span>
                                        </div>
                                        <div class="text-sm text-green-600 font-medium">
                                            <span x-text="provider.nextAvailable"></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </template>
                </div>
            </div>

            <!-- Map Area -->
            <div class="lg:w-1/2 relative" 
                 :class="mobileView === 'map' ? 'block' : 'hidden lg:block'">
                
                <!-- Desktop Map -->
                <div id="map" class="hidden lg:block h-full"></div>
                
                <!-- Mobile Map -->
                <div x-show="mobileView === 'map'" class="lg:hidden">
                    <div id="mobile-map" class="h-screen"></div>
                </div>
            </div>
        </div>
    </div>

    <!-- Mobile Filters Drawer -->
    <div x-show="showMobileFilters" class="lg:hidden">
        <div @@click="showMobileFilters = false" class="modal-backdrop" :class="{'show': showMobileFilters}"></div>
        <div class="filter-drawer" :class="{'open': showMobileFilters}">
            <div class="h-full overflow-y-auto p-6">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-lg font-semibold">Filters</h2>
                    <button @@click="showMobileFilters = false" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                
                <!-- Mobile filter content - same as desktop -->
                <div class="space-y-6">
                    <!-- Copy all filter sections from desktop sidebar here -->
                    <!-- This ensures consistency between mobile and desktop filters -->
                </div>
            </div>
        </div>
    </div>

    <!-- Mobile Navigation Menu -->
    <div x-show="showMobileMenu" class="lg:hidden">
        <div @@click="showMobileMenu = false" class="modal-backdrop" :class="{'show': showMobileMenu}"></div>
        <div class="filter-drawer" :class="{'open': showMobileMenu}">
            <div class="h-full overflow-y-auto p-6">
                <div class="flex justify-between items-center mb-6">
                    <h2 class="text-lg font-semibold">Menu</h2>
                    <button @@click="showMobileMenu = false" class="text-gray-500 hover:text-gray-700">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                
                <!-- Navigation Links -->
                <div class="space-y-4">
                    <a href="/Search" class="flex items-center gap-3 p-3 text-pet-orange font-medium bg-orange-50 rounded-lg">
                        <i class="fas fa-search"></i>
                        <span>Find Services</span>
                    </a>
                    <a href="/Dashboard" class="flex items-center gap-3 p-3 text-gray-700 hover:bg-gray-50 rounded-lg transition-colors">
                        <i class="fas fa-calendar-alt"></i>
                        <span>My Bookings</span>
                    </a>
                    <a href="/Messages" class="flex items-center gap-3 p-3 text-gray-700 hover:bg-gray-50 rounded-lg transition-colors">
                        <i class="fas fa-comments"></i>
                        <span>Messages</span>
                        <span class="ml-auto bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">3</span>
                    </a>
                    <a href="/Pets" class="flex items-center gap-3 p-3 text-gray-700 hover:bg-gray-50 rounded-lg transition-colors">
                        <i class="fas fa-paw"></i>
                        <span>My Pets</span>
                    </a>
                </div>
                
                <!-- User Profile Section -->
                <div class="mt-8 pt-6 border-t border-gray-200">
                    <div class="flex items-center gap-3 p-3">
                        <img src="https://via.placeholder.com/40" alt="Profile" class="w-10 h-10 rounded-full">
                        <div>
                            <div class="font-medium text-gray-900">User Name</div>
                            <div class="text-sm text-gray-500">Pet Owner</div>
                        </div>
                    </div>
                    <div class="mt-4 space-y-2">
                        <a href="/Profile" class="flex items-center gap-3 p-3 text-gray-700 hover:bg-gray-50 rounded-lg transition-colors">
                            <i class="fas fa-user"></i>
                            <span>Profile Settings</span>
                        </a>
                        <a href="/Auth/Logout" class="flex items-center gap-3 p-3 text-gray-700 hover:bg-gray-50 rounded-lg transition-colors">
                            <i class="fas fa-sign-out-alt"></i>
                            <span>Sign Out</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="~/js/pages/service-discovery.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.14.1/dist/cdn.min.js" defer></script>
    <script>
        document.addEventListener('alpine:init', () => {
            Alpine.data('serviceDiscovery', () => ({
                // Initial state
                loading: false,
                mobileView: 'results',
                showMobileFilters: false,
                showMobileMenu: false,
                
                // Search filters
                filters: {
                    location: '@ViewBag.InitialLocation',
                    latitude: null,
                    longitude: null,
                    radiusMiles: 10,
                    serviceCategories: @ViewBag.InitialService ? ['@ViewBag.InitialService'] : [],
                    startDate: null,
                    endDate: null,
                    minPrice: null,
                    maxPrice: null,
                    minRating: null,
                    verifiedOnly: false,
                    emergencyService: false,
                    weekendAvailable: false,
                    eveningAvailable: false,
                    sortBy: 'distance'
                },
                
                // Data
                searchResults: {
                    results: [],
                    totalCount: 0
                },
                serviceTypes: [
                    { id: 'walking', name: 'Walking', icon: 'fas fa-walking' },
                    { id: 'grooming', name: 'Grooming', icon: 'fas fa-cut' },
                    { id: 'sitting', name: 'Pet Sitting', icon: 'fas fa-home' },
                    { id: 'training', name: 'Training', icon: 'fas fa-graduation-cap' },
                    { id: 'vet', name: 'Veterinary', icon: 'fas fa-stethoscope' },
                    { id: 'boarding', name: 'Boarding', icon: 'fas fa-bed' }
                ],
                locationSuggestions: [],
                
                // Methods
                init() {
                    this.initializeDatePickers();
                    this.loadServiceCategories();
                    this.initMapEvents();
                    this.loadUrlParameters();
                    if (this.filters.location) {
                        this.searchProviders();
                    }
                },
                
                initializeDatePickers() {
                    flatpickr("#start-date", {
                        minDate: "today",
                        onChange: (selectedDates, dateStr) => {
                            this.filters.startDate = dateStr;
                        }
                    });
                    
                    flatpickr("#end-date", {
                        minDate: "today",
                        onChange: (selectedDates, dateStr) => {
                            this.filters.endDate = dateStr;
                        }
                    });
                },
                
                async loadServiceCategories() {
                    try {
                        const response = await fetch('/Search/GetServiceCategories');
                        const result = await response.json();
                        if (result.success && result.data) {
                            // Update service types with real data
                            this.serviceTypes = result.data.map(cat => ({
                                id: cat.serviceCategoryId,
                                name: cat.name,
                                icon: cat.iconClass || 'fas fa-paw'
                            }));
                        }
                    } catch (error) {
                        console.warn('Failed to load service categories:', error);
                    }
                },
                
                toggleService(serviceId) {
                    const index = this.filters.serviceCategories.indexOf(serviceId);
                    if (index > -1) {
                        this.filters.serviceCategories.splice(index, 1);
                    } else {
                        this.filters.serviceCategories.push(serviceId);
                    }
                },
                
                async searchLocation() {
                    if (this.filters.location.length < 2) {
                        this.locationSuggestions = [];
                        return;
                    }
                    
                    try {
                        const response = await fetch(`/Search/GetLocationSuggestions?query=${encodeURIComponent(this.filters.location)}`);
                        const result = await response.json();
                        if (result.success) {
                            this.locationSuggestions = result.data || [];
                        }
                    } catch (error) {
                        console.warn('Failed to get location suggestions:', error);
                    }
                },
                
                selectLocation(suggestion) {
                    this.filters.location = suggestion.displayName;
                    this.filters.latitude = suggestion.latitude;
                    this.filters.longitude = suggestion.longitude;
                    this.locationSuggestions = [];
                },
                
                async searchProviders() {
                    this.loading = true;
                    try {
                        const searchData = {
                            location: this.filters.location,
                            latitude: this.filters.latitude,
                            longitude: this.filters.longitude,
                            radiusMiles: this.filters.radiusMiles,
                            serviceCategoryIds: this.filters.serviceCategories,
                            startDate: this.filters.startDate,
                            endDate: this.filters.endDate,
                            minPrice: this.filters.minPrice,
                            maxPrice: this.filters.maxPrice,
                            minRating: this.filters.minRating,
                            verifiedOnly: this.filters.verifiedOnly,
                            emergencyServiceOnly: this.filters.emergencyService,
                            weekendAvailable: this.filters.weekendAvailable,
                            eveningAvailable: this.filters.eveningAvailable,
                            sortBy: this.filters.sortBy
                        };
                        
                        const response = await fetch('/Search/Search', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(searchData)
                        });
                        
                        const result = await response.json();
                        if (result.success) {
                            this.searchResults = result.data;
                            this.updateMapMarkers();
                        } else {
                            console.error('Search failed:', result.message);
                        }
                    } catch (error) {
                        console.error('Search error:', error);
                    } finally {
                        this.loading = false;
                    }
                },
                
                selectProvider(provider) {
                    // Handle provider selection - could open modal or navigate to details
                    console.log('Selected provider:', provider);
                    // TODO: Open provider details modal or navigate to provider page
                },
                
                // Listen for map events
                loadUrlParameters() {
                    const urlParams = new URLSearchParams(window.location.search);
                    
                    // Load location parameter
                    if (urlParams.has('location')) {
                        this.filters.location = urlParams.get('location');
                    }
                    
                    // Load services parameter
                    if (urlParams.has('services')) {
                        const services = urlParams.get('services').split(',').filter(Boolean);
                        this.filters.serviceCategories = services;
                    }
                    
                    // Load pet count parameter
                    if (urlParams.has('petCount')) {
                        const petCount = parseInt(urlParams.get('petCount'));
                        if (petCount > 0) {
                            this.filters.petCount = petCount;
                        }
                    }
                    
                    // Load date range parameter
                    if (urlParams.has('dateRange')) {
                        const dateRange = urlParams.get('dateRange');
                        this.filters.startDate = dateRange.split(' to ')[0];
                        this.filters.endDate = dateRange.split(' to ')[1];
                    }
                    
                    // Load search query parameter
                    if (urlParams.has('query')) {
                        this.filters.searchQuery = urlParams.get('query');
                    }
                    
                    console.log('Loaded URL parameters:', this.filters);
                },
                
                initMapEvents() {
                    window.addEventListener('provider-selected', (event) => {
                        // Find provider by ID and show details
                        const provider = this.searchResults.results.find(p => p.id === event.detail.providerId);
                        if (provider) {
                            this.selectProvider(provider);
                        }
                    });
                    
                    window.addEventListener('provider-contact', (event) => {
                        // Find provider by ID and show contact options
                        const provider = this.searchResults.results.find(p => p.id === event.detail.providerId);
                        if (provider) {
                            console.log('Contact provider:', provider);
                            // TODO: Open contact modal or show contact options
                        }
                    });
                },
                
                updateMapMarkers() {
                    // Update map markers when search results change
                    if (window.serviceDiscovery && this.searchResults.results) {
                        window.serviceDiscovery.updateProviders(this.searchResults.results);
                    }
                }
            }));
        });
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDPRlxV1qyiB872TcrG23IA5oYVG1claO4&callback=initMap"></script>
}